% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/caching_check.R
\name{caching_check}
\alias{caching_check}
\title{Check the caching status of API requests}
\usage{
caching_check(reset = FALSE)
}
\arguments{
\item{reset}{Boolean. If TRUE it will erase the previously set caching preference
and ask the user again. Note existing cache won't be deleted}
}
\value{
No object, but sets "caching" and "cache_dir" in the global environment
to be used by other functions. Also prints to console the cache directory and
current chosen caching preference.
}
\description{
caching_check() will suggest setting up a cache directory on local disk to
speed up API repeat API queries. It will first look for a cache directory using
rappdirs::user_cache_dir. If it finds none it will ask permission to create
one. If user agrees, API query responses will be cached here to be reused on
repeat queries. "caching" and "cache_dir" will be added to the global environment
using Sys.setenv() so that these options are available to other functions.
}
\details{
If user opts out, the cache won't be created and queries won't be saved.
"caching" and "cache_dir" will not be added to global environment.

It is possible to change your preference after creating the cache using the
reset = TRUE option. This will remove "caching" and "cache_dir" from global
environment. Note this doesn't remove the existing cache if it was previously made.

Although not handled by this function, other policedatR functions use "caching"
and "cache_dir" to set their parameters for caching. These functions use
memoise::memoise() and cachem::cache_disk() to handle caching. The max age
for cache items is set to Inf. max_size of the cache is 1GB, after which cache
items are evicted according to the Least Recently Used (LRU) eviction policy.
}
\examples{

caching_check()

}
